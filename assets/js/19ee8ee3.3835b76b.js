"use strict";(self.webpackChunkconnected_vehicles=self.webpackChunkconnected_vehicles||[]).push([[454],{7958:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=t(4848),s=t(8453);const r={},l=void 0,o={id:"Python/Example Flask App",title:"Example Flask App",description:"Poetry",source:"@site/docs/Python/Example Flask App.md",sourceDirName:"Python",slug:"/Python/Example Flask App",permalink:"/connected_vehicles_site/docs/Python/Example Flask App",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Summary and Resources",permalink:"/connected_vehicles_site/docs/Git/summary"},next:{title:"Syllabus",permalink:"/connected_vehicles_site/docs/syllabus"}},i={},p=[{value:"Poetry",id:"poetry",level:2},{value:"Flask Project",id:"flask-project",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"poetry",children:"Poetry"}),"\n",(0,a.jsx)(n.p,{children:"Install poetry:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install pipx\npipx install poetry\n"})}),"\n",(0,a.jsx)(n.h2,{id:"flask-project",children:"Flask Project"}),"\n",(0,a.jsx)(n.p,{children:"Initialize poetry and add flask and psutil to the project:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"poetry init -n\npoetry add flask\npoetry add psutil\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Create ",(0,a.jsx)(n.code,{children:"app.py"})," and add the following as its contents:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from flask import Flask, render_template\nimport psutil\n\napp = Flask(__name__)\n\n@app.route(\'/\')\ndef stats():\n\n    try:\n        with open("/sys/class/thermal/thermal_zone0/temp", "r") as f:\n            temp = float(f.read()) / 1000.0  # Convert millidegree to degree\n            temp_data = f"CPU Temperature: {temp:.1f}\xb0C"\n    except FileNotFoundError:\n        temp_data = "Temperature data not available."\n    \n    cpu_usage = psutil.cpu_percent(interval=1)\n    \n    memory = psutil.virtual_memory()\n    \n    return render_template("index.html", temp=temp, cpu_usage=cpu_usage, memory=memory)\n\n\nif __name__ == \'__main__\':\n    app.run()\n\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Create a ",(0,a.jsx)(n.code,{children:"templates"})," directory, then create ",(0,a.jsx)(n.code,{children:"index.html"})," inside of it. Add the following as its contents:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Raspberry Pi Status</title>\n    <style>\n        body { font-family: Arial, sans-serif; background-color: #f4f4f9; text-align: center; margin-top: 50px; }\n        .stat { font-size: 1.5em; margin: 10px; }\n    </style>\n</head>\n<body>\n    <h1>Raspberry Pi System Status</h1>\n    <div class="stat">\n        {% if temp %}\n            <p>CPU Temperature: {{ temp }} \xb0C</p>\n        {% else %}\n            <p>CPU Temperature data not available.</p>\n        {% endif %}\n    </div>\n    <div class="stat">\n        <p>CPU Usage: {{ cpu_usage }}%</p>\n    </div>\n    <div class="stat">\n        <p>Memory Usage: {{ memory.percent }}% (Used: {{ memory.used // (1024**2) }} MB, Total: {{ memory.total // (1024**2) }} MB)</p>\n    </div>\n</body>\n</html>\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var a=t(6540);const s={},r=a.createContext(s);function l(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);